<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sol.squid.recruit.RecruitMapper">
	
	<select id="getAllRecruit" parameterType="Map" resultType="com.sol.squid.recruit.Recruit">
		select *
		from (
			select rownum as rn, rt_no, rt_u_id, rt_title, rt_rest_name, rt_rest_img, rt_rest_type, rt_con_type, rt_con_age, rt_con_gender, rt_start_date, rt_end_date, rt_start_time, rt_end_time, rt_date, rt_content, rt_pay, rt_view,
					u_id, u_pw, u_name, u_address, u_address2, u_birth, u_type, u_intro, u_gender, u_profile, u_phonNumber 
			from (
				select * from user_info, recruit
				where rt_u_id = u_id
				order by rt_no desc
			)
		) 
		where rn &gt;= #{start} and rn &lt;= #{end}
	</select>
	
	<select id="getCountRecruit" resultType="java.lang.Integer">
		select count(*) from recruit, user_info where rt_u_id = u_id
	</select>
	
	<select id="getRecruit" parameterType="java.lang.Integer" resultType="com.sol.squid.recruit.Recruit">
		select * from recruit where rt_no = #{rt_no}
	</select>
	
	<select id="getUserInfo" parameterType="java.lang.String" resultType="com.sol.squid.user.User">
		select * from user_info where u_id = #{uId}
	</select>
	
	<insert id="regRecruit" parameterType="com.sol.squid.recruit.Recruit">
		insert into RECRUIT values(recruit_seq.nextval, #{rt_u_id}, #{rt_title}, #{rt_rest_name}, #{rt_rest_img}, #{rt_rest_type}, #{rt_con_type}, #{rt_con_age}, #{rt_con_gender}, #{rt_start_date}, #{rt_end_date}, #{rt_total_date}, #{rt_Dday}, #{rt_start_time}, #{rt_end_time}, #{rt_total_time}, sysdate, #{rt_content}, #{rt_pay}, 0)
	</insert>
	
</mapper>